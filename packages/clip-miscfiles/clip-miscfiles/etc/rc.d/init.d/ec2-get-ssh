#!/bin/bash
# chkconfig: 2345 95 20
# processname: ec2-get-ssh
# description: Capture AWS public key credentials for EC2 user

# Source function library
. /etc/rc.d/init.d/functions

# Source networking configuration
[ -r /etc/sysconfig/network ] && . /etc/sysconfig/network

# Replace the following environment variables for your system
export PATH=:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin
 
# Check that networking is configured
if [ "${NETWORKING}" = "no" ]; then
  echo "Networking is not configured."
  exit 1
fi
 
start() {
  if [ ! -d /home/toor/.ssh ]; then
    mkdir -p /home/toor/.ssh
    chmod 700 /home/toor/.ssh
    chown toor:toor /home/toor/.ssh
  fi
  if [ ! -d /home/client/.ssh ]; then
    mkdir -p /home/client/.ssh
    chmod 700 /home/client/.ssh
    chown client:client /home/client/.ssh
  fi
  # Retrieve public key from metadata server using HTTP
  curl -f http://169.254.169.254/latest/meta-data/public-keys/0/openssh-key > /tmp/my-public-key
  if [ $? -eq 0 ]; then
    echo "EC2: Retrieve public key from metadata server using HTTP." 
    cat /tmp/my-public-key >> /home/toor/.ssh/authorized_keys
    chmod 600 /home/toor/.ssh/authorized_keys
    chown toor:toor /home/toor/.ssh/authorized_keys
    cat /tmp/my-public-key >> /home/client/.ssh/authorized_keys
    chmod 600 /home/client/.ssh/authorized_keys
    chown client:client /home/client/.ssh/authorized_keys
    rm /tmp/my-public-key
  fi
}
 
stop() {
  echo "Nothing to do here"
}
 
restart() {
  stop
  start
}
 
# See how we were called.
case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    restart
    ;;
  *)
    echo $"Usage: $0 {start|stop|restart}"
    exit 1
esac
 
exit $?
